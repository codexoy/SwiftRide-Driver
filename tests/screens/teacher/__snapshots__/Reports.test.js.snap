// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reports view renders correctly 1`] = `
<RCTScrollView
  keyboardDismissMode="on-drag"
  keyboardShouldPersistTaps="always"
>
  <View>
    <View
      style={
        Object {
          "flex": 1,
          "marginLeft": 26,
          "marginRight": 26,
          "marginTop": 20,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "fontSize": 20,
              "fontWeight": "bold",
              "marginBottom": 20,
              "marginTop": 4,
            }
          }
        >
          הפקת דוחות
        </Text>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "marginLeft": "auto",
              "marginTop": -5,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginTop": -6,
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
                theme={
                  Object {
                    "colors": Object {
                      "disabled": "hsl(208, 8%, 90%)",
                      "divider": "#bcbbc1",
                      "error": "#ff190c",
                      "grey0": "#393e42",
                      "grey1": "#43484d",
                      "grey2": "#5e6977",
                      "grey3": "#86939e",
                      "grey4": "#bdc6cf",
                      "grey5": "#e1e8ee",
                      "greyOutline": "#bbb",
                      "platform": Object {
                        "android": Object {
                          "error": "#f44336",
                          "primary": "#2196f3",
                          "secondary": "#9C27B0",
                          "success": "#4caf50",
                          "warning": "#ffeb3b",
                        },
                        "ios": Object {
                          "error": "#ff3b30",
                          "primary": "#007aff",
                          "secondary": "#5856d6",
                          "success": "#4cd964",
                          "warning": "#ffcc00",
                        },
                      },
                      "primary": "#2089dc",
                      "searchBg": "#303337",
                      "secondary": "#8F0CE8",
                      "success": "#52c41a",
                      "warning": "#faad14",
                    },
                  }
                }
                underlayColor="white"
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "black",
                        "fontSize": 36,
                      },
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  testID="iconIcon"
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "backgroundColor": "#fff",
            "borderRadius": 4,
            "elevation": 6,
            "marginBottom": 24,
            "marginTop": 12,
            "paddingHorizontal": 0,
            "paddingVertical": 0,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 6,
              "width": 0,
            },
            "shadowOpacity": 0.09,
            "shadowRadius": 20,
            "width": "100%",
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#f7f7f7",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 20,
                "paddingVertical": 12,
                "width": "100%",
              }
            }
          >
            <Text>
              ספר תלמידים
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#f7f7f7",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 20,
                "paddingVertical": 12,
                "width": "100%",
              }
            }
          >
            <Text>
              תקבולים ותשלומים
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#f7f7f7",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 20,
                "paddingVertical": 12,
                "width": "100%",
              }
            }
          >
            <Text>
              הכנסות
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#f7f7f7",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 20,
                "paddingVertical": 12,
                "width": "100%",
              }
            }
          >
            <Text>
              ייצוא קובץ אחיד למס הכנסה
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "flex": 1,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "borderBottomColor": "#f7f7f7",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "paddingHorizontal": 20,
                "paddingVertical": 12,
                "width": "100%",
              }
            }
          >
            <Text>
              רווח והפסד
            </Text>
          </View>
        </View>
      </View>
      <Text
        style={
          Object {
            "alignSelf": "flex-start",
            "color": "#5c5959",
            "fontWeight": "bold",
          }
        }
      >
        הפקת יומן הזמנות
      </Text>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "backgroundColor": "#fff",
            "borderRadius": 4,
            "elevation": 6,
            "marginBottom": 24,
            "marginTop": 12,
            "paddingHorizontal": 0,
            "paddingVertical": 0,
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 6,
              "width": 0,
            },
            "shadowOpacity": 0.09,
            "shadowRadius": 20,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "center",
              "flex": 1,
              "flexDirection": "row",
              "width": "80%",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-start",
                "flex": 1,
                "marginLeft": "auto",
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "padding": 18,
                }
              }
            >
              <Text
                style={
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 18,
                    "fontWeight": "bold",
                  }
                }
              >
                תאריך התחלה
              </Text>
              <Text
                style={
                  Object {
                    "alignSelf": "flex-start",
                  }
                }
              >
                01.05.2019
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "padding": 18,
                }
              }
            >
              <Text
                style={
                  Object {
                    "alignSelf": "flex-start",
                    "fontSize": 18,
                    "fontWeight": "bold",
                  }
                }
              >
                תאריך סיום
              </Text>
              <Text
                style={
                  Object {
                    "alignSelf": "flex-start",
                  }
                }
              >
                31.05.2019
              </Text>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgb(12,116,244)",
              "borderRadius": 0,
              "elevation": 8,
              "height": 56,
              "justifyContent": "center",
              "opacity": 1,
              "shadowColor": "rgb(12,116,244)",
              "shadowOffset": Object {
                "height": 8,
                "width": 0,
              },
              "shadowOpacity": 0.5,
              "shadowRadius": 16,
              "width": "100%",
            }
          }
        >
          <View>
            <Text
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 20,
                  "fontWeight": "bold",
                }
              }
            >
              הפק
            </Text>
          </View>
        </View>
      </View>
    </View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onRequestClose={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 10,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "marginBottom": 8,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#d5d5d5",
                "borderBottomWidth": 0.5,
                "padding": 14,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#8f8f8f",
                    "fontSize": 13,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Pick a date
            </Text>
          </View>
          <View
            onStartShouldSetResponderCapture={[Function]}
          >
            <View>
              <RCTDatePicker
                date={1558881845555}
                minuteInterval={1}
                mode="date"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
              />
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#d5d5d5",
                "borderTopWidth": 0.5,
                "height": 57,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "normal",
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Confirm
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "padding": 10,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Cancel
          </Text>
        </View>
      </View>
    </Modal>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onRequestClose={[Function]}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        pointerEvents="box-none"
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 10,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "borderRadius": 13,
                "marginBottom": 8,
                "overflow": "hidden",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#d5d5d5",
                "borderBottomWidth": 0.5,
                "padding": 14,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#8f8f8f",
                    "fontSize": 13,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Pick a date
            </Text>
          </View>
          <View
            onStartShouldSetResponderCapture={[Function]}
          >
            <View>
              <RCTDatePicker
                date={1558881845555}
                minuteInterval={1}
                mode="date"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
              />
            </View>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderColor": "#d5d5d5",
                "borderTopWidth": 0.5,
                "height": 57,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "normal",
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Confirm
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "borderRadius": 13,
              "height": 57,
              "justifyContent": "center",
              "marginBottom": 0,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "color": "#007ff9",
                  "fontSize": 20,
                  "fontWeight": "600",
                  "padding": 10,
                  "textAlign": "center",
                },
                undefined,
              ]
            }
          >
            Cancel
          </Text>
        </View>
      </View>
    </Modal>
  </View>
</RCTScrollView>
`;
