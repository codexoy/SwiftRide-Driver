// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Students view renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "marginTop": 20,
        "paddingLeft": 26,
        "paddingRight": 26,
      }
    }
    testID="StudentsView"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "flex-start",
            "fontSize": 20,
            "fontWeight": "bold",
            "marginBottom": 0,
          }
        }
      >
        התלמידים שלי
      </Text>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "marginLeft": "auto",
            "marginTop": -5,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginRight": 6,
                "marginTop": 6,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
                theme={
                  Object {
                    "colors": Object {
                      "disabled": "hsl(208, 8%, 90%)",
                      "divider": "#bcbbc1",
                      "error": "#ff190c",
                      "grey0": "#393e42",
                      "grey1": "#43484d",
                      "grey2": "#5e6977",
                      "grey3": "#86939e",
                      "grey4": "#bdc6cf",
                      "grey5": "#e1e8ee",
                      "greyOutline": "#bbb",
                      "platform": Object {
                        "android": Object {
                          "error": "#f44336",
                          "primary": "#2196f3",
                          "secondary": "#9C27B0",
                          "success": "#4caf50",
                          "warning": "#ffeb3b",
                        },
                        "ios": Object {
                          "error": "#ff3b30",
                          "primary": "#007aff",
                          "secondary": "#5856d6",
                          "success": "#4cd964",
                          "warning": "#ffcc00",
                        },
                      },
                      "primary": "#2089dc",
                      "searchBg": "#303337",
                      "secondary": "#8F0CE8",
                      "success": "#52c41a",
                      "warning": "#faad14",
                    },
                  }
                }
                underlayColor="white"
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "black",
                        "fontSize": 24,
                      },
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  testID="iconIcon"
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Object {
                "alignSelf": "flex-end",
                "marginTop": 4,
                "width": 120,
              }
            }
          >
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 6,
                  "left": 4,
                  "right": 4,
                  "top": 6,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="none"
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderBottomColor": "rgba(0, 0, 0, 0.38)",
                      "borderBottomWidth": 0.5,
                      "height": 31,
                      "paddingBottom": 8,
                      "paddingTop": -1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "top": 3,
                      }
                    }
                  >
                    <Text
                      numberOfLines={1}
                      style={
                        Object {
                          "color": "rgba(0, 0, 0, 0.38)",
                          "fontSize": 16,
                        }
                      }
                    >
                      סדר לפי
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                      }
                    }
                  >
                    <TextInput
                      absoluteRTLLayout={false}
                      allowFontScaling={true}
                      autoCapitalize="sentences"
                      data={
                        Array [
                          Object {
                            "label": "מאזן כספי",
                            "value": "balance",
                          },
                          Object {
                            "label": "מספר שיעור",
                            "value": "lessons_done",
                          },
                        ]
                      }
                      disableFullscreenUI={true}
                      dropdownMargins={
                        Object {
                          "max": 20,
                          "min": 0,
                        }
                      }
                      dropdownOffset={
                        Object {
                          "left": 0,
                          "top": 0,
                        }
                      }
                      editable={false}
                      itemColor="rgba(0, 0, 0, .54)"
                      itemCount={4}
                      itemPadding={8}
                      labelExtractor={[Function]}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onChangeText={[Function]}
                      onContentSizeChange={[Function]}
                      onFocus={[Function]}
                      propsExtractor={[Function]}
                      rejectResponderTermination={true}
                      renderAccessory={[Function]}
                      rippleDuration={400}
                      selectionColor="rgb(0, 145, 234)"
                      shadeOpacity={0.12}
                      style={
                        Array [
                          Object {
                            "flex": 1,
                            "margin": 0,
                            "padding": 0,
                            "top": 2,
                          },
                          Object {
                            "color": "rgba(0, 0, 0, .87)",
                            "fontSize": 16,
                            "height": 24,
                            "textAlign": "left",
                          },
                          undefined,
                        ]
                      }
                      underlineColorAndroid="transparent"
                      useNativeDriver={false}
                      value=""
                      valueExtractor={[Function]}
                    />
                    <View
                      style={
                        Object {
                          "alignSelf": "flex-start",
                          "justifyContent": "center",
                          "top": 2,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "height": 24,
                            "justifyContent": "center",
                            "width": 24,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "height": 6,
                              "overflow": "hidden",
                              "width": 12,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "height": 8,
                                  "transform": Array [
                                    Object {
                                      "translateY": -4,
                                    },
                                    Object {
                                      "rotate": "45deg",
                                    },
                                  ],
                                  "width": 8,
                                },
                                Object {
                                  "backgroundColor": "rgba(0, 0, 0, .38)",
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "height": 8,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgb(213, 0, 0)",
                            "fontSize": 0,
                            "opacity": 0,
                          }
                        }
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "bottom": 0,
                          "left": 0,
                          "paddingVertical": 4,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "rgba(0, 0, 0, .38)",
                            "fontSize": 12,
                            "opacity": 1,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessible={true}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onRippleAnimation={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                rippleCentered={false}
                rippleColor="rgba(0, 0, 0, .38)"
                rippleDuration={400}
                rippleFades={true}
                rippleOpacity={0.54}
                rippleSequential={true}
                rippleSize={0}
                style={
                  Object {
                    "height": 48,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 16,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                onResponderRelease={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1.0)",
                        "borderRadius": 2,
                        "position": "absolute",
                        "shadowColor": "rgba(0, 0, 0, 1.0)",
                        "shadowOffset": Object {
                          "height": 2,
                          "width": 0,
                        },
                        "shadowOpacity": 0.54,
                        "shadowRadius": 2,
                      },
                      Object {
                        "height": 96,
                        "left": undefined,
                        "top": undefined,
                        "transform": Array [
                          Object {
                            "translateY": -48,
                          },
                        ],
                        "width": undefined,
                      },
                      Object {
                        "marginTop": 60,
                      },
                    ]
                  }
                >
                  <RCTScrollView
                    contentContainerStyle={
                      Object {
                        "paddingVertical": 8,
                      }
                    }
                    data={
                      Array [
                        Object {
                          "label": "מאזן כספי",
                          "value": "balance",
                        },
                        Object {
                          "label": "מספר שיעור",
                          "value": "lessons_done",
                        },
                      ]
                    }
                    disableVirtualization={false}
                    getItem={[Function]}
                    getItemCount={[Function]}
                    horizontal={false}
                    initialNumToRender={10}
                    keyExtractor={[Function]}
                    maxToRenderPerBatch={10}
                    numColumns={1}
                    onContentSizeChange={[Function]}
                    onEndReachedThreshold={2}
                    onLayout={[Function]}
                    onMomentumScrollEnd={[Function]}
                    onScroll={[Function]}
                    onScrollBeginDrag={[Function]}
                    onScrollEndDrag={[Function]}
                    removeClippedSubviews={false}
                    renderItem={[Function]}
                    scrollEnabled={false}
                    scrollEventThrottle={50}
                    stickyHeaderIndices={Array []}
                    style={
                      Object {
                        "borderRadius": 2,
                        "flex": 1,
                      }
                    }
                    updateCellsBatchingPeriod={50}
                    viewabilityConfigCallbackPairs={Array []}
                    windowSize={21}
                  >
                    <View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="rgba(0, 0, 0, .38)"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0.54}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            מאזן כספי
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "rgba(0, 0, 0, .38)",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                      <View
                        onLayout={[Function]}
                        style={null}
                      >
                        <View
                          accessible={true}
                          focusAnimation={null}
                          focusAnimationDuration={225}
                          hitSlop={
                            Object {
                              "bottom": 6,
                              "left": 4,
                              "right": 4,
                              "top": 6,
                            }
                          }
                          onLayout={[Function]}
                          onPress={[Function]}
                          onPressIn={[Function]}
                          onPressOut={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          pointerEvents="box-only"
                          rippleCentered={false}
                          rippleColor="rgba(0, 0, 0, .38)"
                          rippleDuration={400}
                          rippleFades={true}
                          rippleOpacity={0.54}
                          rippleSequential={true}
                          rippleSize={0}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "borderRadius": 0,
                              "height": 40,
                              "justifyContent": "center",
                              "paddingLeft": undefined,
                              "paddingRight": undefined,
                              "paddingVertical": 8,
                            }
                          }
                        >
                          <Text
                            numberOfLines={1}
                            style={
                              Array [
                                Object {
                                  "textAlign": "left",
                                },
                                undefined,
                                Object {
                                  "color": "rgba(0, 0, 0, .87)",
                                  "fontSize": 16,
                                },
                              ]
                            }
                          >
                            מספר שיעור
                          </Text>
                          <View
                            style={
                              Object {
                                "backgroundColor": "rgba(0, 0, 0, .38)",
                                "borderRadius": 0,
                                "bottom": 0,
                                "left": 0,
                                "opacity": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "left": 0,
                                  "overflow": "hidden",
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "borderRadius": 0,
                                },
                              ]
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </RCTScrollView>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "flexDirection": "row",
          "marginTop": 20,
          "overflow": "hidden",
          "paddingBottom": 0,
          "paddingTop": 0,
        }
      }
    >
      <View
        style={
          Object {
            "paddingHorizontal": 0,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#dcdce1",
              "borderBottomWidth": 0,
              "borderColor": "#86939e",
              "borderRadius": 30,
              "flexDirection": "row",
              "marginLeft": 0,
              "marginRight": 0,
              "minHeight": 36,
              "paddingLeft": 8,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 8,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
                theme={
                  Object {
                    "colors": Object {
                      "disabled": "hsl(208, 8%, 90%)",
                      "divider": "#bcbbc1",
                      "error": "#ff190c",
                      "grey0": "#393e42",
                      "grey1": "#43484d",
                      "grey2": "#5e6977",
                      "grey3": "#86939e",
                      "grey4": "#bdc6cf",
                      "grey5": "#e1e8ee",
                      "greyOutline": "#bbb",
                      "platform": Object {
                        "android": Object {
                          "error": "#f44336",
                          "primary": "#2196f3",
                          "secondary": "#9C27B0",
                          "success": "#4caf50",
                          "warning": "#ffeb3b",
                        },
                        "ios": Object {
                          "error": "#ff3b30",
                          "primary": "#007aff",
                          "secondary": "#5856d6",
                          "success": "#4cd964",
                          "warning": "#ffcc00",
                        },
                      },
                      "primary": "#2089dc",
                      "searchBg": "#303337",
                      "secondary": "#8F0CE8",
                      "success": "#52c41a",
                      "warning": "#faad14",
                    },
                  }
                }
                underlayColor="white"
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "#7d7d7d",
                        "fontSize": 20,
                      },
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  testID="iconIcon"
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <TextInput
            allowFontScaling={true}
            onBlur={[Function]}
            onCancel={[Function]}
            onChangeText={[Function]}
            onClear={[Function]}
            onFocus={[Function]}
            placeholder="חיפוש תלמיד"
            placeholderTextColor="#7d7d7d"
            platform="ios"
            rejectResponderTermination={true}
            style={
              Object {
                "alignItems": "flex-start",
                "alignSelf": "center",
                "color": "black",
                "flex": 1,
                "fontSize": 14,
                "marginLeft": 0,
                "minHeight": 40,
                "paddingLeft": 6,
              }
            }
            testID="searchInput"
            textAlign="right"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 15,
                "marginRight": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "opacity": 0,
            "position": "absolute",
            "right": -0,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007aff",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginBottom": 68,
        }
      }
    >
      <View>
        <RNSVGCircle
          cx={316}
          cy="52"
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          r="22.75"
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="6.4"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="4"
          ry="4"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="70"
          x={210}
          y="36"
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="6.4"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="3"
          ry="3"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="40"
          x={240}
          y="50"
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="6.4"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="3"
          ry="3"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="40"
          x={240}
          y="64"
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="10"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="0"
          ry="0"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="12"
          x="14.84"
          y="40"
        />
        <RNSVGCircle
          cx={316}
          cy="124"
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          r="22.75"
          rotation={0}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          x={0}
          y={0}
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="6.4"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="4"
          ry="4"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="70"
          x={210}
          y="106"
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="6.4"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="3"
          ry="3"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="40"
          x={240}
          y="120"
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="6.4"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="3"
          ry="3"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="40"
          x={240}
          y="134"
        />
        <RNSVGRect
          fill={
            Array [
              0,
              4278190080,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          height="10"
          matrix={
            Array [
              1,
              0,
              0,
              1,
              0,
              0,
            ]
          }
          opacity={1}
          originX={0}
          originY={0}
          propList={Array []}
          rotation={0}
          rx="0"
          ry="0"
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth={1}
          vectorEffect={0}
          width="12"
          x="14.84"
          y="110"
        />
      </View>
    </View>
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgb(12,116,244)",
        "borderRadius": 0,
        "bottom": 0,
        "elevation": 8,
        "height": 56,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "shadowColor": "rgb(12,116,244)",
        "shadowOffset": Object {
          "height": 8,
          "width": 0,
        },
        "shadowOpacity": 0.5,
        "shadowRadius": 16,
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#fff",
          "fontSize": 20,
          "fontWeight": "bold",
        }
      }
    >
      הוספת תלמיד/ה
    </Text>
  </View>
</View>
`;
